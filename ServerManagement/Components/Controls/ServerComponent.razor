@inject NavigationManager NavigationManager
@inject IServersRepository ServersRepository
@inject IMessenger Messenger

@if(Server is not null)
{

    <tr @key="Server.ServerId">
        <td>
            @Server.Name in @Server.City is <span style="color: @(Server.IsOnline ? "green" : "red")">@(Server.IsOnline ? "online" : "offline")</span>
        </td>
        <td>
            <a href="/server/@Server.ServerId" class="btn btn-link">Edit</a>
        </td>
        <td>
            @if (Server.IsOnline)
            {
                <button
                    class="btn btn-outline-danger"
                        @onclick="@(() => SetServerStatus(false))">
                        Turn Off
                    </button>
            }
            else
            {
                <button class="btn btn-outline-success"
                        @onclick="@(() => SetServerStatus(true))">
                    Turn On
                </button>
            }
        </td>

        <td>
            @if(Server.IsOnline)
            {
                <text>@Server.NumberOfPeople</text>
            }
        </td>
        <td>
            <EditForm Model="Server"
                      FormName="@($"form-server-{Server.ServerId}")"
                      OnValidSubmit="@(() => DeleteServer(Server.ServerId))">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Server? Server { get; set; }

    private void DeleteServer(int serverId)
    {
        ArgumentOutOfRangeException.ThrowIfLessThanOrEqual(serverId, 0);

        ServersRepository.DeleteServer(serverId);

        NavigationManager.NavigateTo("/servers", true);
    }

    private void SetServerStatus(bool status)
    {
        if(Server is null)
        {
            return;
        }

        if (Server.IsOnline == status)
        {
            return;
        }

        Server.IsOnline = status;

        PeopleOnlineMessage message = new PeopleOnlineMessage(Server.City, Server.NumberOfPeople, Server.IsOnline);
        WeakReferenceMessenger.Default.Send<PeopleOnlineMessage>(message);
        
    }
}
