@page "/servers/{id:int}"

@inject NavigationManager NavigationManager

<h3>Edit Server</h3>
<br />
<br />
@if (Server is not null)
{
    <EditForm FormName="formEditServer" Enhance Model="Server" OnValidSubmit="Submit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <InputNumber @bind-Value="Server.ServerId" hidden />

        <FieldComponent Label="Name">
            <Control>
                <InputText @bind-Value="Server.Name" class="form-control" />
            </Control>
            <ValidationControl>
                <ValidationMessage For="() => Server.Name" />
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputText @bind-Value="Server.City" class="form-control" />
            </Control>
            <ValidationControl>
                <ValidationMessage For="() => Server.City" />
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="Online">
            <Control>
                <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input" />
            </Control>        
        </FieldComponent>
   
        <br/>
        <button class="btn btn-primary" type="submit">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}


@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    private IServersRepository ServersRepository { get; set; } = null!;

    [SupplyParameterFromForm] 
    Server? Server { get; set; }

    protected override void OnParametersSet()
    {
        Server ??= ServersRepository.GetServerById(Id);
    }

    void Submit()
    {
        if (Server is not null)
        {
            ServersRepository.UpdateServer(Server.ServerId, Server);

            NavigationManager.NavigateTo("/servers");
        }
    }
}
