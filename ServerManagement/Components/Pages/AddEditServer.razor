@page "/server/{Id:int?}"
@inject IServersRepository ServersRepository
@inject NavigationManager NavigationManager

@if(Id.HasValue)
{
    <h3>Edit Server</h3>
}
else
{
    <h3>Add Server</h3>
}

<br />
<br />

@if (Server is not null)
{
    <EditForm FormName="formEditServer" Enhance Model="Server" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        @if (Server.ServerId > 0)
        {
            <InputNumber @bind-Value="Server.ServerId" hidden />
        }

        <FieldComponent Label="Name">
            <Control>
                <InputText @bind-Value="Server.Name" class="form-control" />
            </Control>
            <ValidationControl>
                <ValidationMessage For="() => Server.Name" />
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputText @bind-Value="Server.City" class="form-control" />
            </Control>
            <ValidationControl>
                <ValidationMessage For="() => Server.City" />
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="Online">
            <Control>
                <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input" />
            </Control>
        </FieldComponent>

        <br />
        @if (Server.ServerId > 0)
        {
            <button class="btn btn-primary" type="submit">Update</button>
        }
        else
        {
            <button class="btn btn-primary" type="submit">Submit</button>
        }
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromQuery]
    public string? City { get; set; }

    [SupplyParameterFromForm]
    Server? Server { get; set; }

    protected override async void OnParametersSet()
    {
        if(Id.HasValue)
        {
            Server ??= await ServersRepository.GetServerById(Id.Value);

            StateHasChanged();
        }
        else
        {
            Server = new Server() { City = string.IsNullOrWhiteSpace(City) ? string.Empty : City, Name = string.Empty, IsOnline = false };
        }
    }

    private void Submit()
    {
        if (Server is not null)
        {
            if (Id.HasValue)
            {
                ServersRepository.UpdateServer(Server.ServerId, Server);
            }
            else
            {
                ServersRepository.AddServer(Server);
            }

            NavigationManager.NavigateTo($"/servers/backfrom/{Server.City}");
        }
    }
}
