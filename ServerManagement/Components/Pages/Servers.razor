@page "/servers"
@rendermode InteractiveServer
@inject IServersRepository ServersRepository
@inject ICitiesRepository CitiesRepository
@inject NavigationManager NavigationManager

<h3>Servers</h3>


<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (string cityName in cities)
        {
            <div class="col">
                <div class="card @(cityName.Equals(selectedCityName, StringComparison.OrdinalIgnoreCase) ? "border-primary" : "")">
                    <img src=@($"/images/{cityName}.png") class="card-img-top" alt="Calgary"  >
                    <div class="card-body">
                        <button type="button" class="btn btn-outline-primary" @onclick="@(() => SelectCity(cityName))"> @cityName</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<br/>

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search servers" @bind-value:event="oninput" @bind-value="ServerFilter" />
    <button class="btn btn-outline-secondary" type="button" id="buttonSearch" @onclick="HandleSearch">Search</button>
</div>
<br />

<ServerListComponent 
    @rendermode="InteractiveServer" 
    CityName="@selectedCityName" />

<br/>
@ServerFilter

<a href="/servers/add" class="btn btn-primary">Add server</a>

@code {
    private List<string> cities = new();
    private string selectedCityName = "Toronto";

    private string _serverFilter = string.Empty;

    private string ServerFilter 
    {
        get => _serverFilter;
        set
        {
            _serverFilter = value;

            // servers = ServersRepository.SearchServers(_serverFilter);

            selectedCityName = string.Empty;
        }
    }

    protected override void OnInitialized()
    {
        cities = CitiesRepository.GetCities();
    }

   

    private void SelectCity(string cityName)
    {
        selectedCityName = cityName;

        // servers = ServersRepository.GetServersByCity(selectedCityName);

        if(cityName == "Halifax")
        {
            for (int i = 16; i < 1000; i++)
            {
                // servers.Add(new Server() { ServerId = i, City = $"cityz{i}", Name = $"name{i}" });
            }
        }
    }

    private void HandleSearch()
    {
        // servers = ServersRepository.SearchServers(ServerFilter);
        selectedCityName = string.Empty;
    }
}
