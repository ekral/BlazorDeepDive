@page "/servers"
@page "/servers/backfrom/{CityName}"
@rendermode InteractiveServer
@inject IServersRepository ServersRepository
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Servers</h3>
<CityListComponent 
    @ref="cityListComponent"
    @rendermode="InteractiveServer"
    SelectedCityName="@selectedCity"
    SelectCityCallback="HandleCitySelection" />

<br/>

<SearchComponent
    @ref="searchComponent"
    SearchServerCallback="HandleSearchServer" />

<br />

<ServerListComponent 
    @rendermode="InteractiveServer" 
    CityName="@selectedCity"
    ServerFilter="@serverFilter"/>

<br/>

<a href="/servers/add" class="btn btn-primary">Add server</a>

@code {
    [Parameter]
    public string? CityName { get; set; }

    private string selectedCity = "Toronto";
    private string serverFilter = string.Empty;

    CityListComponent? cityListComponent;
    SearchComponent? searchComponent;

    public void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        searchComponent?.ClearFilter();
    }

    public void HandleSearchServer(string serverFilter)
    {
        this.serverFilter = serverFilter;
        selectedCity = string.Empty;
        cityListComponent?.ClearSelection();
    }
    public Servers()
    {
        Console.WriteLine("Servers: Constructor");

    }

    protected override void OnInitialized()
    {

        Console.WriteLine("Servers: OnInitialized");

        base.OnInitialized();
    }

    protected override bool ShouldRender()
    {
        Console.WriteLine("Servers: ShouldRender");

        return base.ShouldRender();

    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        Console.WriteLine("Servers: SetParametersAsync");

        return base.SetParametersAsync(parameters);
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("Servers: OnParametersSet");

        base.OnParametersSet();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            if(NavigationManager.Uri.Contains("backfrom") && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;

                StateHasChanged();
            }
        }
    }

    public void Dispose()
    {
        Console.WriteLine("Servers: Dispose");

    }
}
